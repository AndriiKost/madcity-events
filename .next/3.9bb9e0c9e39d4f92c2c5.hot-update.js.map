{"version":3,"sources":["webpack:///./pages/index.js?f7ee"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","length","firebase","database","snapshotToArray","snapshot","returnArr","forEach","childSnapshot","item","val","key","push","Index","state","bars","name","eventCost","eventName","activeStreet","buildBarObject","barName","locationButtonClicked","street","ref","once","then","map","bar","setTimeout","setState","listOfBars"],"mappings":"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","file":"3.9bb9e0c9e39d4f92c2c5.hot-update.js","sourcesContent":["import React, { Component } from 'react';\nimport Router from 'next/router';\nimport * as firebase from \"firebase\";\n\nimport BarList from '../components/BarList';\n\n// Initialize Firebase\n// TODO: Replace with your project's customized code snippet\nconst config = {\n  apiKey: \"AIzaSyBflE79fHdIcTACJzodRtTyBWsBdBR8LYE\",\n  authDomain: \"events-madcity.firebaseapp.com\",\n  databaseURL: \"https://events-madcity.firebaseio.com/\",\n  projectId: \"events-madcity\",\n  storageBucket: \"events-madcity.appspot.com\",\n  messagingSenderId: \"1000322236144\"\n};\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\n// Get a reference to the database service\nconst database = firebase.database();\n\nfunction snapshotToArray(snapshot) {\n  var returnArr = [];\n\n  snapshot.forEach(function(childSnapshot) {\n      var item = childSnapshot.val();\n      item.key = childSnapshot.key;\n\n      returnArr.push(item);\n  });\n\n  return returnArr;\n};\n\n\nexport default class Index extends Component {\n  state = {\n    bars: [{name: 'example', eventCost: '$5', eventName: 'test'}],\n    activeStreet: ''\n  }\n\n  buildBarObject = (barName, eventCost, eventName) => {\n\n    this.state.bars.push({name: barName, eventCost: eventCost, eventName: eventName})\n  }\n\n  locationButtonClicked = (street) => {\n    // get data from firebase db using street param\n    firebase.database().ref('/' + street + '/').once('value').then((snapshot) => {\n      const bars = snapshotToArray(snapshot)[0];\n\n      // pass data from firebase to function\n      bars.map(bar => this.buildBarObject(bar.name, bar.eventCost, bar.eventName));\n    });\n    // console.log(this.state.bars)\n    setTimeout(() => { this.setState({activeStreet: street}) }, 100);\n  }\n  \n  render() {\n\n    let listOfBars = (\n      <div>\n        {this.state.bars.map((bar) => {\n          return <BarList\n            // click={() => this.checkedItem(index)}\n            name={bar.name}\n            eventCost={bar.eventCost}\n            eventName={bar.eventName} />\n        })}\n      </div>\n    );\n\n    return (\n      <div>\n        <h1> Choose your <strike>destiny</strike> street </h1>\n        <div className=\"SearchArea\">\n          {/* <button onClick={() => Router.push('/streets/willy')}>Willy Street</button> */}\n          <button onClick={() => this.locationButtonClicked('willy')}>Willy Street</button>\n          <button onClick={() => this.locationButtonClicked('atkins')}>Atkins Street</button>\n          <button onClick={() => this.locationButtonClicked('state')}>State Street</button>\n        </div>\n          {listOfBars}\n      </div>\n    );\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./pages/index.js"],"sourceRoot":""}